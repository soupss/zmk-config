// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define LAYER_ONE 0
#define LAYER_TWO 1

// Home row mods macro
#define HRML(k1,k2) &ht LALT k1  &ht LGUI k2
#define HRMR(k1,k2) &ht RGUI k1  &ht RALT k2

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        sqdq: singlequote_doublequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
            mods = <(MOD_LSHIFT)>;
        };
        cose: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSHIFT)>;
        };
        doco: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSHIFT)>;
        };
        miun: minus_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            mods = <(MOD_LSHIFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        layer_one {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            &kp A      &kp S     HRML(D,         F)     &kp G          &kp H      HRMR(J,        K)     &kp L      &sqdq
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , ;      │ . :      │ - _      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &cose      &doco      &miun
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp LCTRL   &kp LSHFT     &kp SPACE  &mo LAYER_TWO
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        layer_two {
            bindings = <
            &kp TAB      &none     &none      &none     &none           &none      &none      &none      &none      &none
            &kp ESC      &none     &none      &none     &none           &none     &none      &none     &none      &none
            &none        &none     &none      &none     &none           &none     &none      &none     &none      &none
                                            &kp LCTRL   &kp LSHFT     &kp SPACE  &mo LAYER_TWO
            >;
        };
   };
};
