// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
};

/ {
    behaviors {
    dot_colon: dot_colon {
               compatible = "zmk,behavior-mod-morph";
#binding-cells = <0>;
               bindings = <&kp DOT>, <&kp COLON>;

               mods = <(MOD_LSFT)>;
           };

cma_scolon: comma_semicolon {
                compatible = "zmk,behavior-mod-morph";
#binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp SEMI>;

                mods = <(MOD_LSFT|MOD_RSFT)>;
            };

dash_undrsc: dash_underscore {
                 compatible = "zmk,behavior-mod-morph";
#binding-cells = <0>;
                 bindings = <&kp MINUS>, <&kp UNDER>;

                 mods = <(MOD_LSFT)>;
             };

mtr: mod_tap_right {
         compatible = "zmk,behavior-hold-tap";
         label = "mod tap right";
         bindings = <&kp>, <&kp>;

#binding-cells = <2>;
         tapping-term-ms = <200>;
         quick-tap-ms = <150>;
         require-prior-idle-ms = <100>;
         flavor = "balanced";
         retro-tap;
         hold-trigger-key-positions = <4 14 24 31 30 23 13 32 33 3 2 12 22 21 11 10 0 1 20 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
         hold-trigger-on-release;
     };

mtl: mod_tap_left {
         compatible = "zmk,behavior-hold-tap";
         label = "mod tap left";
         bindings = <&kp>, <&kp>;

#binding-cells = <2>;
         tapping-term-ms = <200>;
         quick-tap-ms = <150>;
         require-prior-idle-ms = <100>;
         flavor = "balanced";
         retro-tap;
         hold-trigger-on-release;
         hold-trigger-key-positions = <17 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 31 30>;
     };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <11 12>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <10 19 11 12 13 16 17 18 19>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // homerow mods
        //----------------------------------
        // _ ALT GUI _ _     _ _ GUI ALT _
        // thumb keys
        //----------------------------------
        // CTRL SHIFT    SPACE/NUMBERS ESCAPE/SYMBOLS
        //               (press/hold)

        default {
            //  q  w  e  r  t    y  u  i   o   p
            //  a  s  d  f  g    h  j  k   l
            //  z  x  c  v  b    n  m  ,;  .:  -_
            //----------------------------------

            bindings = <
                &kp Q        &kp W         &kp E         &kp R        &kp T         &kp Y       &kp U        &kp I         &kp O         &kp P
                &mtl LALT A  &mtl LSHFT S  &mtl LCTRL D  &mtl LGUI F  &kp G         &kp H       &mtr RGUI J  &mtr RCTRL K  &mtr RSHFT L  &kp RALT
                &kp Z        &kp X         &kp C         &kp V        &kp B         &kp N       &kp M        &cma_scolon   &dot_colon    &dash_undrsc
                &kp SPACE    &kp ESCAPE    &lt 1 BSPC  &lt 2 ENTER
                >;
        };

        numbers {
            //               7 8 9 BACKSPACE
            //  TAB          4 5 6 ENTER
            //             0 1 2 3
            //----------------------------------

            bindings = <
                &trans         &trans     &trans     &trans     &trans     &trans  &kp N7        &kp N8         &kp N9         &trans
                &mtl LALT ESC  &kp LSHFT  &kp LCTRL  &kp LGUI   &trans     &trans  &mtr RGUI N4  &mtr RCTRL N5  &mtr RSHFT N6  &kp RALT
                &trans         &trans     &trans     &trans     &trans     &kp N0  &kp N1        &kp N2         &kp N3         &trans
                &kp SPACE  &kp ESC    &trans  &trans
                >;
        };

        symbols {
            //     + & # ~ *    " [ ]   BACKSPACE
            //   TAB ^ @ % $    ' ( ) | ENTER
            //     = ? ! \ /    ` { } < >
            //----------------------------------

            bindings = <
                &kp AMPERSAND  &kp AT_SIGN       &kp HASH          &kp STAR          &kp TILDE        &kp GRAVE          &kp LBKT                    &kp RBKT         &kp PIPE       &trans
                &mtl LALT ESC  &mtl LSHFT EQUAL  &mtl LCTRL CARET  &mtl LGUI DOLLAR  &kp PRCNT        &kp DOUBLE_QUOTES  &mtr RGUI LEFT_PARENTHESIS  &mtr RCTRL RPAR  &mtr RSHFT LT  &kp GT
                &trans         &kp EXCL          &kp QMARK         &kp SLASH         &kp BACKSLASH    &kp SQT            &kp LBRC                    &kp RBRC         &kp PLUS         &trans
                &kp SPACE         &kp ESC          &trans             &trans
                >;
        };

        utility {
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans           &trans
                &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT_ARROW  &trans
                &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans           &trans
                &trans  &trans    &trans    &trans
                >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        utility {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

