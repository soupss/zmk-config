// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2

#define ___ &trans
#define XXX &none

&mt {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    require-prior-idle-ms = <100>;
    bindings = <&kp>, <&kp>;
};
&lt {
    tapping-term-ms = <200>;
};

/{
    behaviors {
        dc: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LCTL)>;
        };
        cs: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT)>;
        };
        du: dash_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // homerow mods
        //----------------------------------
        // _ ALT GUI _ _     _ _ GUI ALT _

        // thumb keys
        //----------------------------------
        // CTRL SHIFT    SPACE/NUMBERS ESCAPE/SYMBOLS
        //               (press/hold)

        default {
            //  q  w  e  r  t    y  u  i   o   p
            //  a  s  d  f  g    h  j  k   l
            //  z  x  c  v  b    n  m  ,;  .:  -_
            //----------------------------------
            bindings = <
                &kp Q    &kp W          &kp E         &kp R        &kp T        &kp Y     &kp U         &kp I         &kp O      &kp P
                &kp A    &mt LALT S     &mt LGUI D    &kp F        &kp G        &kp H     &kp J    &mt RALT K    &mt RGUI L      ___
                &kp Z    &kp X          &kp C         &kp V        &kp B        &kp N     &kp M         &cs     &dc    &du
                                                         &kp LCTRL     &kp LSHFT         &lt NUM SPACE    &lt SYM ESC
            >;
        };
        numbers {
            //               7 8 9 BACKSPACE
            //  TAB          4 5 6 ENTER
            //             0 1 2 3
            //----------------------------------
            bindings = <
                ___     ___      ___      ___     ___           ___     &kp 7      &kp 8           &kp 9         &kp BSPC
                &kp TAB     ___      ___      ___     ___           ___    &kp 4      &mt RGUI 5      &mt RALT 6      &kp ENTER
                ___     ___      ___      ___     ___           &kp 0       &kp 1     &kp 2              &kp 3     ___
                                             &kp LCTRL     &kp LSHFT                      ___     ___
            >;
        };
        symbols {
            //     + & # ~ *    " [ ]   BACKSPACE
            //   TAB ^ @ % $    ' ( ) | ENTER
            //     = ? ! \ /    ` { } < >
            //----------------------------------
            bindings = <
                &kp PLUS    &kp AMPS          &kp HASH       &kp TILDE    &kp STAR          &kp DQT    &kp LBKT      &kp RBKT      ___       &kp BSPC
                &kp TAB     &mt LALT CARET    &mt LGUI AT      &kp PRCNT    &kp DLLR          &kp SQT    &kp LPAR      &mt RGUI RPAR      &mt RALT PIPE      &kp ENTER
                &kp EQUAL   &kp QMARK        &kp EXCL        &kp BSLH     &kp FSLH          &kp GRAVE  &kp LBRC     &kp RBRC     &kp LT     &kp GT
                                                 &kp LCTRL     &kp LSHFT              ___     ___
            >;
        };
    };
};
